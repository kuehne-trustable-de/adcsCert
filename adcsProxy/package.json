{
  "name": "adcs-proxy",
  "version": "0.0.0",
  "private": true,
  "description": "Description for adcsProxy",
  "license": "UNLICENSED",
  "scripts": {
    "prettier:check": "prettier --check \"{,src/**/}*.{md,json,yml,html,java}\"",
    "prettier:format": "prettier --write \"{,src/**/}*.{md,json,yml,html,java}\"",
    "docker:db:up": "echo \"Docker for db no not configured for application adcsProxy\"",
    "docker:app:up": "docker-compose -f src/main/docker/app.yml up -d adcs-proxy-app",
    "docker:others:await": "",
    "predocker:others:up": "",
    "docker:others:up": "",
    "docker:others:down": "",
    "ci:e2e:prepare:docker": "npm run docker:db:up && npm run docker:others:up && docker ps -a",
    "ci:e2e:prepare": "npm run ci:e2e:prepare:docker",
    "ci:e2e:teardown:docker": "npm run docker:db:down --if-present && npm run docker:others:down && docker ps -a",
    "ci:e2e:teardown": "npm run ci:e2e:teardown:docker",
    "backend:info": "./mvnw -ntp enforcer:display-info --batch-mode",
    "backend:doc:test": "./mvnw -ntp javadoc:javadoc --batch-mode",
    "backend:nohttp:test": "./mvnw -ntp checkstyle:check --batch-mode",
    "backend:start": "./mvnw -P-webapp",
    "java:jar": "./mvnw -ntp verify -DskipTests --batch-mode",
    "java:war": "./mvnw -ntp verify -DskipTests --batch-mode -Pwar",
    "java:docker": "./mvnw -ntp verify -DskipTests jib:dockerBuild",
    "java:docker:arm64": "npm run java:docker -- -Djib-maven-plugin.architecture=arm64",
    "backend:unit:test": "./mvnw -ntp -P-webapp verify --batch-mode -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.de.trustable.ca3s.adcs.proxy=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF",
    "backend:build-cache": "./mvnw dependency:go-offline",
    "backend:debug": "./mvnw -Dspring-boot.run.jvmArguments=\"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000\"",
    "java:jar:dev": "npm run java:jar -- -Pdev,webapp",
    "java:jar:prod": "npm run java:jar -- -Pprod",
    "java:war:dev": "npm run java:war -- -Pdev,webapp",
    "java:war:prod": "npm run java:war -- -Pprod",
    "java:docker:dev": "npm run java:docker -- -Pdev,webapp",
    "java:docker:prod": "npm run java:docker -- -Pprod",
    "ci:backend:test": "npm run backend:info && npm run backend:doc:test && npm run backend:nohttp:test && npm run backend:unit:test",
    "ci:server:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment",
    "ci:e2e:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment -- -Pe2e -Denforcer.skip=true",
    "preci:e2e:server:start": "npm run docker:db:await --if-present && npm run docker:others:await --if-present",
    "ci:e2e:server:start": "java -jar target/e2e.$npm_package_config_packaging --spring.profiles.active=$npm_package_config_default_environment -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.de.trustable.ca3s.adcs.proxy=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF --logging.level.org.springframework.web=ERROR"
  },
  "config": {
    "backend_port": "8081",
    "default_environment": "prod",
    "packaging": "jar"
  },
  "devDependencies": {
    "generator-jhipster": "^8.0.0-beta.1",
    "prettier": "3.2.5",
    "prettier-plugin-java": "2.0.0",
    "prettier-plugin-packagejson": "2.4.12"
  },
  "engines": {
    "node": ">=14.17.6"
  },
  "cacheDirectories": [
    "node_modules"
  ]
}
