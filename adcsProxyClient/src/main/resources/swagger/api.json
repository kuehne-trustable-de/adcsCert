{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://192.168.56.102:8080/ADCSConnector",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "adcsRequests",
      "description": "the adcsRequests API"
    },
    {
      "name": "adcsCertificateBuilder",
      "description": "the adcsCertificateBuilder API"
    },
    {
      "name": "adcsInfo",
      "description": "the adcsInfo API"
    },
    {
      "name": "adcsRequest",
      "description": "the adcsRequest API"
    },
    {
      "name": "adcsCertificateRevoker",
      "description": "the adcsCertificateRevoker API"
    }
  ],
  "paths": {
    "/adcsCertificateRevoker": {
      "post": {
        "tags": [
          "adcsCertificateRevoker"
        ],
        "summary": "revoke a certificate",
        "description": "revoke a certificate issued by the local ADCS. The request parameter are wrapped into Javascript Web Signature",
        "operationId": "revokeCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JWSWrappedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "certificate revoked"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "authentication / authorization missing, especially JWS invalid"
          },
          "409": {
            "description": "certificate already revoked"
          }
        }
      }
    },
    "/adcsCertificateBuilder": {
      "post": {
        "tags": [
          "adcsCertificateBuilder"
        ],
        "summary": "request a certificate",
        "description": "build a certificate using the local ADCS. The request parameter are wrapped into Javascript Web Signature",
        "operationId": "buildCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JWSWrappedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "new certificate created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateEnrollmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateEnrollmentResponse"
                }
              }
            }
          },
          "401": {
            "description": "authentication / authorization missing, especially JWS invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateEnrollmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/adcsTemplates": {
      "get": {
        "tags": [
          "adcsInfo"
        ],
        "summary": "get the templates available at this ADCS instance",
        "description": "get the templates available at this ADCS instance",
        "operationId": "getCATemplates",
        "responses": {
          "200": {
            "description": "Array of template names",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "authentication / authorization missing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "503": {
            "description": "ADCS server unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adcsRequests/Ids": {
      "get": {
        "tags": [
          "adcsRequests"
        ],
        "summary": "get the list certificate request IDs",
        "description": "enumerate all the request (issued or pending) avialable the ADCS",
        "operationId": "getRequestIdList",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set. Either provide this parameter or resolvedWhenTimestamp or revokedWhenTimestamp.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "resolvedWhenTimestamp",
            "in": "query",
            "description": "The resolvedWhen value must be after this timestamp value. Either provide this parameter or offset or revokedWhenTimestamp.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "revokedWhenTimestamp",
            "in": "query",
            "description": "The revokedWhen value must be after this timestamp value. Either provide this parameter or resolvedWhenTimestamp or offset.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "request id list created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestIdsResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestIdsResponse"
                }
              }
            }
          },
          "401": {
            "description": "authentication / authorization missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestIdsResponse"
                }
              }
            }
          },
          "409": {
            "description": "an item already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestIdsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/adcsRequest/{reqId}": {
      "get": {
        "tags": [
          "adcsRequest"
        ],
        "summary": "get details of a certificate request identified by its Id",
        "description": "details of a certificate request identified by its Id",
        "operationId": "getRequestById",
        "parameters": [
          {
            "name": "reqId",
            "in": "path",
            "description": "certificate request id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "request id found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCertificateResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCertificateResponse"
                }
              }
            }
          },
          "401": {
            "description": "authentication / authorization missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCertificateResponse"
                }
              }
            }
          },
          "404": {
            "description": "no existing item for the given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCertificateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/adcsInstanceDetails": {
      "get": {
        "tags": [
          "adcsInfo"
        ],
        "summary": "get the details describing this ADCS instance",
        "description": "get the some details like version, type, signing certificate chain, and templates configured of this ADCS instance",
        "operationId": "getCAInstanceDetails",
        "responses": {
          "200": {
            "description": "Details regarding this ADCS instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ADCSInstanceDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "authentication / authorization missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ADCSInstanceDetailsResponse"
                }
              }
            }
          },
          "503": {
            "description": "ADCS server unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ADCSInstanceDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/adcsInfo": {
      "get": {
        "tags": [
          "adcsInfo"
        ],
        "summary": "get description of ADCS instance",
        "description": "get description of ADCS instance",
        "operationId": "getADCSInfo",
        "responses": {
          "200": {
            "description": "ADCS info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "authentication / authorization missing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "503": {
            "description": "ADCS server unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JWSWrappedRequest": {
        "required": [
          "jws"
        ],
        "type": "object",
        "properties": {
          "jws": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiJ9.eyJjc3IiOiItLS0tLUJFR0lOIENFUlRJRklDQVRFIFJFUVVFU1QtLS0tLVxyXG5NSUlDZ0RDQ0FXZ0NBUUF3RkRFU01CQUdBMVVFQXd3Sk1UQXVNUzR3TGpFd01JSUJJakFOQmdrcWhraUc5dzBCXHJcbkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJWcDZneW10d2RCTzhwYXE3V1BDVnhDeS9VOU5sai93SFp4S21vZldcclxuTXJYZmUxT0MyRWdOWWZCQ1M3OEVzc0dBejJkK2pCeGpMeS9aY2w5Zm0zdzVkS3BZNjk0RExHenc3bmFUVU1kU1xyXG5Ha29zZXVsQStYTHdHRk9TaE1GM2c3aS9QK0FQTDJVQTZVR1AxRGsyT3JyQ1ZHVGdQYVlFcXh0RkVycmtEZUc5XHJcbm1VOHZ6WFUyWFdFL3NqQzhOQXAyYXRkckIwOWFxSTNkcVRPNmJFdjdBeTh0SUtMbHpoaGplY3JhUnpZMTlUS1RcclxuWmxZazJwSnR6RlJhZlJGUDZ3b2tDRUwvK3lkWndjanJ2clJtZkRKYlpIQ0lGWjlyQzVvQTBiblkrYkZ6eWtwNlxyXG5xUFpUci81eWRUeldRd29VaGVWa0ZGa25EdVNtSHV1cytxSGhNU0NJNzM5dTF3SURBUUFCb0Njd0pRWUpLb1pJXHJcbmh2Y05BUWtPTVJnd0ZqQVVCZ05WSFJFRURUQUxnZ2t4TUM0eExqQXVNVEF3RFFZSktvWklodmNOQVFFTEJRQURcclxuZ2dFQkFDMm9zK3BFWkcvYmozQkJqMkRVYWladzNsUnpOVzI2dUxGeXZqSWdQcWhuRlZNc0Q0RkdXWUdCM3MxMVxyXG52Z3l6ZS9mSStuQVMyMFFabDQxQjh4QXRFOVE3WVpXMk9qaUxWVUFRdFZaUlhxSnpjZEYzZ0d6RWlpQlg0dGxqXHJcbldIRkhMOHhiVm1tcStkSzhxQTdoOTZ5Z2NNUEJLVUViYnZyeGZWL1dGQTd3cDdhRTlncVVsb3M1ZzQybnhOOTlcclxuNFBBNWZBTnI1b1FZSmU4K0VvQWVsTTFVYlMrelpGU3AxL0xKV05EZTdlSkdLMTJ3aG85TWJtajFIRlA1WFhMVVxyXG5DQTRjVE0rZkZHRG95MHBwVkFUN3U0NUdCVGZKYTZhUzNObjRITlFjdFdmcE5vRlRtRUMxTlRUY1l3b3NtUHZoXHJcbkhTL1FIK1o4MFkweW1HQkN2MjJPQUdsQTJlVT1cclxuLS0tLS1FTkQgQ0VSVElGSUNBVEUgUkVRVUVTVC0tLS0tXHJcbiIsImF0dHJpYnV0ZXMiOltdfQ.c2pKbTsW-pWpPjRi-S0Q7AqtacohEXw5ZYVwjHCtuAI"
          }
        },
        "description": "CSR and additional attributes (e.g. template) wrapped in a JWS"
      },
      "CertificateEnrollmentResponse": {
        "required": [
          "cert",
          "certCA",
          "reqId",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "reqId": {
            "type": "integer",
            "format": "int32"
          },
          "cert": {
            "type": "string"
          },
          "certCA": {
            "type": "string"
          }
        }
      },
      "RequestIdsResponse": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "GetCertificateResponse": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetCertificateResponseValues"
            }
          }
        }
      },
      "GetCertificateResponseValues": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "reqId"
          },
          "value": {
            "type": "string",
            "example": "12345"
          }
        }
      },
      "ADCSInstanceDetailsResponse": {
        "type": "object",
        "properties": {
          "caName": {
            "type": "string"
          },
          "caType": {
            "type": "string"
          },
          "parentCaName": {
            "type": "string"
          },
          "productVersion": {
            "type": "string"
          },
          "fileVersion": {
            "type": "string"
          },
          "dnsName": {
            "type": "string"
          },
          "signingCerts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "signingCertChains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "templates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "templateOIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subjectTemplateOIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}