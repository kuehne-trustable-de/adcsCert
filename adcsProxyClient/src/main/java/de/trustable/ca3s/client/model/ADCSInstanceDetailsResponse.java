/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.trustable.ca3s.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.trustable.ca3s.client.invoker.JSON;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.*;
import java.util.Map.Entry;

/**
 * ADCSInstanceDetailsResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-30T19:56:11.616704600+02:00[Europe/Berlin]")
public class ADCSInstanceDetailsResponse {
  public static final String SERIALIZED_NAME_CA_NAME = "caName";
  @SerializedName(SERIALIZED_NAME_CA_NAME)
  private String caName;

  public static final String SERIALIZED_NAME_CA_TYPE = "caType";
  @SerializedName(SERIALIZED_NAME_CA_TYPE)
  private String caType;

  public static final String SERIALIZED_NAME_PARENT_CA_NAME = "parentCaName";
  @SerializedName(SERIALIZED_NAME_PARENT_CA_NAME)
  private String parentCaName;

  public static final String SERIALIZED_NAME_PRODUCT_VERSION = "productVersion";
  @SerializedName(SERIALIZED_NAME_PRODUCT_VERSION)
  private String productVersion;

  public static final String SERIALIZED_NAME_FILE_VERSION = "fileVersion";
  @SerializedName(SERIALIZED_NAME_FILE_VERSION)
  private String fileVersion;

  public static final String SERIALIZED_NAME_DNS_NAME = "dnsName";
  @SerializedName(SERIALIZED_NAME_DNS_NAME)
  private String dnsName;

  public static final String SERIALIZED_NAME_SIGNING_CERTS = "signingCerts";
  @SerializedName(SERIALIZED_NAME_SIGNING_CERTS)
  private List<String> signingCerts = null;

  public static final String SERIALIZED_NAME_SIGNING_CERT_CHAINS = "signingCertChains";
  @SerializedName(SERIALIZED_NAME_SIGNING_CERT_CHAINS)
  private List<String> signingCertChains = null;

  public static final String SERIALIZED_NAME_TEMPLATES = "templates";
  @SerializedName(SERIALIZED_NAME_TEMPLATES)
  private List<String> templates = null;

  public static final String SERIALIZED_NAME_TEMPLATE_O_I_DS = "templateOIDs";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_O_I_DS)
  private List<String> templateOIDs = null;

  public static final String SERIALIZED_NAME_SUBJECT_TEMPLATE_O_I_DS = "subjectTemplateOIDs";
  @SerializedName(SERIALIZED_NAME_SUBJECT_TEMPLATE_O_I_DS)
  private List<String> subjectTemplateOIDs = null;

  public ADCSInstanceDetailsResponse() { 
  }

  public ADCSInstanceDetailsResponse caName(String caName) {
    
    this.caName = caName;
    return this;
  }

   /**
   * Get caName
   * @return caName
  **/
  @ApiModelProperty(value = "")

  public String getCaName() {
    return caName;
  }


  public void setCaName(String caName) {
    this.caName = caName;
  }


  public ADCSInstanceDetailsResponse caType(String caType) {
    
    this.caType = caType;
    return this;
  }

   /**
   * Get caType
   * @return caType
  **/
  @ApiModelProperty(value = "")

  public String getCaType() {
    return caType;
  }


  public void setCaType(String caType) {
    this.caType = caType;
  }


  public ADCSInstanceDetailsResponse parentCaName(String parentCaName) {
    
    this.parentCaName = parentCaName;
    return this;
  }

   /**
   * Get parentCaName
   * @return parentCaName
  **/
  @ApiModelProperty(value = "")

  public String getParentCaName() {
    return parentCaName;
  }


  public void setParentCaName(String parentCaName) {
    this.parentCaName = parentCaName;
  }


  public ADCSInstanceDetailsResponse productVersion(String productVersion) {
    
    this.productVersion = productVersion;
    return this;
  }

   /**
   * Get productVersion
   * @return productVersion
  **/
  @ApiModelProperty(value = "")

  public String getProductVersion() {
    return productVersion;
  }


  public void setProductVersion(String productVersion) {
    this.productVersion = productVersion;
  }


  public ADCSInstanceDetailsResponse fileVersion(String fileVersion) {
    
    this.fileVersion = fileVersion;
    return this;
  }

   /**
   * Get fileVersion
   * @return fileVersion
  **/
  @ApiModelProperty(value = "")

  public String getFileVersion() {
    return fileVersion;
  }


  public void setFileVersion(String fileVersion) {
    this.fileVersion = fileVersion;
  }


  public ADCSInstanceDetailsResponse dnsName(String dnsName) {
    
    this.dnsName = dnsName;
    return this;
  }

   /**
   * Get dnsName
   * @return dnsName
  **/
  @ApiModelProperty(value = "")

  public String getDnsName() {
    return dnsName;
  }


  public void setDnsName(String dnsName) {
    this.dnsName = dnsName;
  }


  public ADCSInstanceDetailsResponse signingCerts(List<String> signingCerts) {
    
    this.signingCerts = signingCerts;
    return this;
  }

  public ADCSInstanceDetailsResponse addSigningCertsItem(String signingCertsItem) {
    if (this.signingCerts == null) {
      this.signingCerts = new ArrayList<>();
    }
    this.signingCerts.add(signingCertsItem);
    return this;
  }

   /**
   * Get signingCerts
   * @return signingCerts
  **/
  @ApiModelProperty(value = "")

  public List<String> getSigningCerts() {
    return signingCerts;
  }


  public void setSigningCerts(List<String> signingCerts) {
    this.signingCerts = signingCerts;
  }


  public ADCSInstanceDetailsResponse signingCertChains(List<String> signingCertChains) {
    
    this.signingCertChains = signingCertChains;
    return this;
  }

  public ADCSInstanceDetailsResponse addSigningCertChainsItem(String signingCertChainsItem) {
    if (this.signingCertChains == null) {
      this.signingCertChains = new ArrayList<>();
    }
    this.signingCertChains.add(signingCertChainsItem);
    return this;
  }

   /**
   * Get signingCertChains
   * @return signingCertChains
  **/
  @ApiModelProperty(value = "")

  public List<String> getSigningCertChains() {
    return signingCertChains;
  }


  public void setSigningCertChains(List<String> signingCertChains) {
    this.signingCertChains = signingCertChains;
  }


  public ADCSInstanceDetailsResponse templates(List<String> templates) {
    
    this.templates = templates;
    return this;
  }

  public ADCSInstanceDetailsResponse addTemplatesItem(String templatesItem) {
    if (this.templates == null) {
      this.templates = new ArrayList<>();
    }
    this.templates.add(templatesItem);
    return this;
  }

   /**
   * Get templates
   * @return templates
  **/
  @ApiModelProperty(value = "")

  public List<String> getTemplates() {
    return templates;
  }


  public void setTemplates(List<String> templates) {
    this.templates = templates;
  }


  public ADCSInstanceDetailsResponse templateOIDs(List<String> templateOIDs) {
    
    this.templateOIDs = templateOIDs;
    return this;
  }

  public ADCSInstanceDetailsResponse addTemplateOIDsItem(String templateOIDsItem) {
    if (this.templateOIDs == null) {
      this.templateOIDs = new ArrayList<>();
    }
    this.templateOIDs.add(templateOIDsItem);
    return this;
  }

   /**
   * Get templateOIDs
   * @return templateOIDs
  **/
  @ApiModelProperty(value = "")
  public List<String> getTemplateOIDs() {
    return templateOIDs;
  }


  public void setTemplateOIDs(List<String> templateOIDs) {
    this.templateOIDs = templateOIDs;
  }


  public ADCSInstanceDetailsResponse subjectTemplateOIDs(List<String> subjectTemplateOIDs) {
    
    this.subjectTemplateOIDs = subjectTemplateOIDs;
    return this;
  }

  public ADCSInstanceDetailsResponse addSubjectTemplateOIDsItem(String subjectTemplateOIDsItem) {
    if (this.subjectTemplateOIDs == null) {
      this.subjectTemplateOIDs = new ArrayList<>();
    }
    this.subjectTemplateOIDs.add(subjectTemplateOIDsItem);
    return this;
  }

   /**
   * Get subjectTemplateOIDs
   * @return subjectTemplateOIDs
  **/
  @ApiModelProperty(value = "")

  public List<String> getSubjectTemplateOIDs() {
    return subjectTemplateOIDs;
  }


  public void setSubjectTemplateOIDs(List<String> subjectTemplateOIDs) {
    this.subjectTemplateOIDs = subjectTemplateOIDs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ADCSInstanceDetailsResponse adCSInstanceDetailsResponse = (ADCSInstanceDetailsResponse) o;
    return Objects.equals(this.caName, adCSInstanceDetailsResponse.caName) &&
        Objects.equals(this.caType, adCSInstanceDetailsResponse.caType) &&
        Objects.equals(this.parentCaName, adCSInstanceDetailsResponse.parentCaName) &&
        Objects.equals(this.productVersion, adCSInstanceDetailsResponse.productVersion) &&
        Objects.equals(this.fileVersion, adCSInstanceDetailsResponse.fileVersion) &&
        Objects.equals(this.dnsName, adCSInstanceDetailsResponse.dnsName) &&
        Objects.equals(this.signingCerts, adCSInstanceDetailsResponse.signingCerts) &&
        Objects.equals(this.signingCertChains, adCSInstanceDetailsResponse.signingCertChains) &&
        Objects.equals(this.templates, adCSInstanceDetailsResponse.templates) &&
        Objects.equals(this.templateOIDs, adCSInstanceDetailsResponse.templateOIDs) &&
        Objects.equals(this.subjectTemplateOIDs, adCSInstanceDetailsResponse.subjectTemplateOIDs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caName, caType, parentCaName, productVersion, fileVersion, dnsName, signingCerts, signingCertChains, templates, templateOIDs, subjectTemplateOIDs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ADCSInstanceDetailsResponse {\n");
    sb.append("    caName: ").append(toIndentedString(caName)).append("\n");
    sb.append("    caType: ").append(toIndentedString(caType)).append("\n");
    sb.append("    parentCaName: ").append(toIndentedString(parentCaName)).append("\n");
    sb.append("    productVersion: ").append(toIndentedString(productVersion)).append("\n");
    sb.append("    fileVersion: ").append(toIndentedString(fileVersion)).append("\n");
    sb.append("    dnsName: ").append(toIndentedString(dnsName)).append("\n");
    sb.append("    signingCerts: ").append(toIndentedString(signingCerts)).append("\n");
    sb.append("    signingCertChains: ").append(toIndentedString(signingCertChains)).append("\n");
    sb.append("    templates: ").append(toIndentedString(templates)).append("\n");
    sb.append("    templateOIDs: ").append(toIndentedString(templateOIDs)).append("\n");
    sb.append("    subjectTemplateOIDs: ").append(toIndentedString(subjectTemplateOIDs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("caName");
    openapiFields.add("caType");
    openapiFields.add("parentCaName");
    openapiFields.add("productVersion");
    openapiFields.add("fileVersion");
    openapiFields.add("dnsName");
    openapiFields.add("signingCerts");
    openapiFields.add("signingCertChains");
    openapiFields.add("templates");
    openapiFields.add("templateOIDs");
    openapiFields.add("subjectTemplateOIDs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ADCSInstanceDetailsResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ADCSInstanceDetailsResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ADCSInstanceDetailsResponse is not found in the empty JSON string", ADCSInstanceDetailsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ADCSInstanceDetailsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ADCSInstanceDetailsResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("caName") != null && !jsonObj.get("caName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `caName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("caName").toString()));
      }
      if (jsonObj.get("caType") != null && !jsonObj.get("caType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `caType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("caType").toString()));
      }
      if (jsonObj.get("parentCaName") != null && !jsonObj.get("parentCaName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentCaName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentCaName").toString()));
      }
      if (jsonObj.get("productVersion") != null && !jsonObj.get("productVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productVersion").toString()));
      }
      if (jsonObj.get("fileVersion") != null && !jsonObj.get("fileVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fileVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fileVersion").toString()));
      }
      if (jsonObj.get("dnsName") != null && !jsonObj.get("dnsName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dnsName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dnsName").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("signingCerts") != null && !jsonObj.get("signingCerts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `signingCerts` to be an array in the JSON string but got `%s`", jsonObj.get("signingCerts").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("signingCertChains") != null && !jsonObj.get("signingCertChains").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `signingCertChains` to be an array in the JSON string but got `%s`", jsonObj.get("signingCertChains").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("templates") != null && !jsonObj.get("templates").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `templates` to be an array in the JSON string but got `%s`", jsonObj.get("templates").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("templateOIDs") != null && !jsonObj.get("templateOIDs").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `templateOIDs` to be an array in the JSON string but got `%s`", jsonObj.get("templateOIDs").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("subjectTemplateOIDs") != null && !jsonObj.get("subjectTemplateOIDs").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `subjectTemplateOIDs` to be an array in the JSON string but got `%s`", jsonObj.get("subjectTemplateOIDs").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ADCSInstanceDetailsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ADCSInstanceDetailsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ADCSInstanceDetailsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ADCSInstanceDetailsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ADCSInstanceDetailsResponse>() {
           @Override
           public void write(JsonWriter out, ADCSInstanceDetailsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ADCSInstanceDetailsResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ADCSInstanceDetailsResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ADCSInstanceDetailsResponse
  * @throws IOException if the JSON string is invalid with respect to ADCSInstanceDetailsResponse
  */
  public static ADCSInstanceDetailsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ADCSInstanceDetailsResponse.class);
  }

 /**
  * Convert an instance of ADCSInstanceDetailsResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

